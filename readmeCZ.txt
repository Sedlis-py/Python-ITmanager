Ahoj, chtěl bych Vám prosím představit první aplikaci jménem ITmanager, kterou publikuji. Jedná se o aplikaci na evidenci IT majetku. Přehled tiskáren. Ukládání přístupů do aplikací a jiných služeb. Aplikace se dá dále rozšiřovat o další moduly (Framy), například na získávání informací o koncových stanicích pomoci WMI, přehled licencí softwaru apod. Aplikace se skládá z hlavního Framu a dalších pod-Framů. Aplikace využívá databázi Sqlite3. Jsem začátečník v programování a aplikaci jsem vytvořil spolu s GPTchat.
Proč aplikace vznikla? Pracuji jako IT technik a potřeboval jsem evidovat nějaké věci v rámci IT oddělení a už mě nějak nebavil excel, tak jsem si řekl, proč si nezkusit vytvořit něco vlastního a tím se i něco nového přiučit. V poslední době koketuji s Pythonem, ve kterém bych se chtěl dál vzdělávat a třeba tak najít nějakou práci při současné práci. Proto jsem zvolil Python Tkinter a pustil se do tvorby aplikace IT manager.
Co všechno v současné verzi aplikace můžete provádět? Můžete evidovat hardware, informace o tiskárnách (servis tiskáren, spotřební materiál tiskáren). Můžete tak získat přehled o nákladech na tiskárny. Vše můžete generovat do PDF dokumentu. Další možností je evidovat přístupy na služby a zařízení. Nemusíte tak hesla psát na papírky apod. Hesla do ostatních služeb jsou v databázi šifrována a následně dešifrována přímo v aplikaci. Může exportovat a importovat databázi.
Z celé aplikace se dá udělat spustitelný soubor například přes PyInstaller. Exe soubor jsem nevytvářel, níže můžete najít celou strukturu.
Struktura aplikace:
 	v rootu se nachází jednotlivé skripty. Aplikace se spouští přes skript __init__.py. Do složky „Reporty“ se generují jednotlivé PDF reporty ohledně tiskáren a hardwaru. Ve složce data je hlavní databáze „ITmanager.db“ název by se neměl měnit. A dále je zde soubor “itmanager_key.key“, který se využívá právě na kartě přístupy (others_rights.py, pozn. přístupy do dalších aplikací), aby bylo možné šifrovat a dešifrovat hesla z databáze „ITmanager.db“. Klíč může být součástí jako proměnná prostředí systému Windows, kde si aplikace tento klíč ze systému bere a následně jej používá k šifrování a dešifrování dat. Nebo klíč může být uložen na flash disku. Je nutno upravit část kódu, který se stará o získání klíče. V kódu (other_rights.py) lze najít dvě varianty. První varianta získá klíč z proměnné z prostředí Windows a druha varianta, že se klíč načte právě ze složky „Data“ ze souboru itmanager_key.key (druhá varianta je jen ukázková pro ulehčení prezentace, protože by klíč nikdy neměl být součástí aplikace z bezpečnostních důvodů 😊). 
Pro prezentaci jsem vytvořil databázi s pár daty a k ní i klíč pro šifrování a dešifrování dat. Pokud by někdo chtěl čistou databázi s novým klíčem stačí oba dva soubory „ITmanager.db“ a „itmanager_key.key“ smazat nebo přesunout. Po spuštění aplikace zjistí, že databáze neexistuje a bude chtít prvotní nastavení. Při prvotním nastavení se vytváří prázdná databáze, uživatel aplikace, bezpečnostní klíč a superuživatel pro přístup do karty přístupy. Vše je řešeno ve skriptu „app_utils.py.“ A zase čistě pro prezentaci, se uživatel vytváří přímo v kódu spolu s heslem (což není ideální a bezpečné). Hesla se v aplikaci nedají měnit (zatím jsem tuto možnost nepřidal, ale plánuji 😊). Běžný uživatel aplikace je „user“ heslo „user“ a uživatel s vyšším oprávněním pro přístupy je „superadmin“ a heslo je „superadmin“. Ve složce „Python balíčky“ jsou potřebné balíčky pro běh aplikace, které jsou potřeba nainstalovat (pip install -r python_balicky.txt)
Předem bych chtěl všem poděkovat za kritiku nebo nápad, jak aplikaci vylepšit. 
Děkuji moc
S pozdravem	Sedlis
